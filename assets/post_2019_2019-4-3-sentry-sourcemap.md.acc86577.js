import{o as e,c as n,f as t,a,x as s}from"./app.5f3fb606.js";const c='{"title":"记sentry配置sourcemap后的优化","description":"","frontmatter":{"title":"记sentry配置sourcemap后的优化","tag":["vue","sentry","sourcemap","webpack"],"author":"Artiely","date":"2019-4-3","cover":"https://gitee.com/artiely/Figure-bed/raw/master/images/20200315155224.png","base64":"c2175b"},"headers":[{"level":2,"title":"需求！","slug":"需求"},{"level":2,"title":"说明","slug":"说明"},{"level":2,"title":"思路一 node","slug":"思路一-node"},{"level":2,"title":"思路二 webpack插件","slug":"思路二-webpack插件"},{"level":2,"title":"最终方案","slug":"最终方案"}],"relativePath":"post/2019/2019-4-3-sentry-sourcemap.md","lastUpdated":1629110827678}',o={},r=t('<h1 id="记sentry配置sourcemap后的优化"><a class="header-anchor" href="#记sentry配置sourcemap后的优化" aria-hidden="true">#</a> 记sentry配置sourcemap后的优化</h1><h2 id="需求"><a class="header-anchor" href="#需求" aria-hidden="true">#</a> 需求！</h2><p>打包后的文件自动过滤出sourcemap并压缩成zip包</p><p>项目结构：</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200321133110.png" alt=""></p><h2 id="说明"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h2><p>首先说明一下为什么会有这样的需求<br> 因为项目中集成了 <code>sentry</code> 关于sentry的介绍 <a href="https://sentry.io" target="_blank" rel="noopener noreferrer">请点击我</a>，<br> 如果你已经了解了 <code>sentry</code><br> 那么你会知道在<code>sentry</code>中我们需要上传sourcemap来定位具体的源码行，但是在实际生产中我们是不能上传sourcemap的，这不仅仅是不安全的问题。<br> 所有我们会在配置中打开sourcemap</p>',7),p=a("div",{class:"language-js line-numbers-mode"},[a("pre",null,[a("code",null,[s("module"),a("span",{class:"token punctuation"},"."),s("exports "),a("span",{class:"token operator"},"="),s(),a("span",{class:"token punctuation"},"{"),s("\n"),a("span",{class:"token comment"},"// ..."),s("\n  productionSourceMap"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token boolean"},"true"),a("span",{class:"token punctuation"},","),s("\n"),a("span",{class:"token comment"},"// ..."),s("\n"),a("span",{class:"token punctuation"},"}"),s("\n")]),a("div",{class:"m-mdic-copy-wrapper"},[a("div",{class:"u-mdic-copy-notify",id:"j-notify-1629556990525-10811"},"复制成功"),a("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"module.exports = {\n// ...\n  productionSourceMap: true,\n// ...\n}\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629556990525-10811","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),a("div",{class:"line-numbers-wrapper"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br")])],-1),i=t('<p>打开后就会在构建后的文件中产生以<code>.map</code>为后缀的文件<br><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200321133238.png" alt=""></p><p>我们可以结合<code>@sentry/webpack-plugin</code>插件来实现自动上传sourcemap到<code>sentry</code>。更多相关信息<a href="https://www.npmjs.com/package/@sentry/webpack-plugin" target="_blank" rel="noopener noreferrer">请点击我</a><br> 上面的一切都很顺利，但是我要发布到生产环境不可能手动去剔除<code>.map</code>文件吧，于是我就想到用nodejs去处理这个问题，</p><h2 id="思路一-node"><a class="header-anchor" href="#思路一-node" aria-hidden="true">#</a> 思路一 node</h2><p>将文件拷贝一份，用递归遍历，拷贝的过程中去掉<code>.map文件</code>然后压缩文件<br><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200321133310.png" alt=""></p><p>每次在<code>npm run build</code>完成后跑一下相关任务</p><h2 id="思路二-webpack插件"><a class="header-anchor" href="#思路二-webpack插件" aria-hidden="true">#</a> 思路二 webpack插件</h2><p>然后我突然意识到可能不需要这么复杂，是否有对应的webpack插件就可以完成这个事情？<br> 于是我找到了一个<code>copy-webpack-plugin</code><br><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200321133337.png" alt=""></p><p>更多信息 <a href="https://www.npmjs.com/package/copy-webpack-plugin" target="_blank" rel="noopener noreferrer">请点击我</a><br> 看上去很美好一切需要的都有，but<br> 实际是复制了一个空文件，然后我把dist改成其他文件就可以了。然后我发现是插件的执行顺序问题<br> 然后我又去看了一遍webpack插件的执行钩子，并看到该插件issue<a href="https://github.com/webpack-contrib/copy-webpack-plugin/issues/195" target="_blank" rel="noopener noreferrer">相关问题讨论</a><br> 虽然我发现vuecli3在复制asses下的文件到dist目录下也是使用的该插件，但是由于dist是在构建以后才生产的，而插件是在这之前就开始执行了，所以是空目录。</p><h2 id="最终方案"><a class="header-anchor" href="#最终方案" aria-hidden="true">#</a> 最终方案</h2><p>当我放弃这些抱着试一试的态度去找webpck的zip插件时有了意外的发现。<br> 这就是我的最终实现方式 非常的简单 <code>zip-webpack-plugin</code></p>',10),l=a("div",{class:"language-js line-numbers-mode"},[a("pre",null,[a("code",null,[s("        "),a("span",{class:"token keyword"},"new"),s(),a("span",{class:"token class-name"},"ZipPlugin"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"{"),s("\n          path"),a("span",{class:"token operator"},":"),s(" path"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"join"),a("span",{class:"token punctuation"},"("),s("__dirname"),a("span",{class:"token punctuation"},","),s(),a("span",{class:"token string"},"'dist'"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},","),s("\n          filename"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token string"},"'dist.zip'"),a("span",{class:"token punctuation"},","),s("\n          exclude"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token punctuation"},"["),a("span",{class:"token regex"},[a("span",{class:"token regex-delimiter"},"/"),a("span",{class:"token regex-source language-regex"},"\\.map$"),a("span",{class:"token regex-delimiter"},"/")]),a("span",{class:"token punctuation"},"]"),s("\n        "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},","),s("\n")]),a("div",{class:"m-mdic-copy-wrapper"},[a("div",{class:"u-mdic-copy-notify",id:"j-notify-1629556990525-81039"},"复制成功"),a("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"        new ZipPlugin({\n          path: path.join(__dirname, 'dist'),\n          filename: 'dist.zip',\n          exclude: [/\\.map$/]\n        }),\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629556990525-81039","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),a("div",{class:"line-numbers-wrapper"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br")])],-1),d=a("p",null,[s("更多说明 "),a("a",{href:"https://www.npmjs.com/package/zip-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},"请点击我")],-1),u=a("p",null,[s("这是我的"),a("code",null,"@sentry/webpack-plugin"),s("配置")],-1),m=a("p",null,[a("img",{src:"https://gitee.com/artiely/Figure-bed/raw/master/images/20200321133404.png",alt:""})],-1);o.render=function(t,a,s,c,o,b){return e(),n("div",null,[r,p,i,l,d,u,m])};export default o;export{c as __pageData};
