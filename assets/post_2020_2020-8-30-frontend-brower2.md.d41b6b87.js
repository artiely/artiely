import{o as e,c as t,f as n,a as c,x as o}from"./app.b304d650.js";const a='{"title":"前端面试题汇总-浏览器篇-2","description":"","frontmatter":{"title":"前端面试题汇总-浏览器篇-2","tag":["javaScript"],"cover":"https://gitee.com/artiely/Figure-bed/raw/master/image/20200831112934.png","base64":"2b4dd7","author":"artiely","date":"2020-8-30"},"headers":[{"level":2,"title":"Token - 服务端身份验证的流行方案","slug":"token-服务端身份验证的流行方案"},{"level":3,"title":"简述：","slug":"简述"},{"level":2,"title":"身份认证","slug":"身份认证"},{"level":2,"title":"Token机制","slug":"token机制"},{"level":3,"title":"用户匹配","slug":"用户匹配"},{"level":3,"title":"防伪造","slug":"防伪造"},{"level":3,"title":"防冒充","slug":"防冒充"},{"level":2,"title":"Token工作流程","slug":"token工作流程"},{"level":3,"title":"生成token","slug":"生成token"},{"level":3,"title":"拦截验证","slug":"拦截验证"},{"level":3,"title":"token刷新","slug":"token刷新-1"},{"level":2,"title":"基于 Token 的身份验证：JSON Web Token","slug":"基于-token-的身份验证json-web-token"},{"level":3,"title":"传统身份验证的方法","slug":"传统身份验证的方法"},{"level":3,"title":"基于 Token 的身份验证方法","slug":"基于-token-的身份验证方法"},{"level":3,"title":"JWT","slug":"jwt"},{"level":3,"title":"Header","slug":"header"},{"level":3,"title":"Payload","slug":"payload"},{"level":3,"title":"Signature","slug":"signature"},{"level":2,"title":"签发与验证 JWT","slug":"签发与验证-jwt"},{"level":3,"title":"准备项目","slug":"准备项目"},{"level":3,"title":"签发 JWT","slug":"签发-jwt"},{"level":3,"title":"验证 JWT","slug":"验证-jwt"},{"level":3,"title":"RS256 算法","slug":"rs256-算法"},{"level":3,"title":"签发 JWT（RS256 算法）","slug":"签发-jwtrs256-算法"}],"relativePath":"post/2020/2020-8-30-frontend-brower2.md","lastUpdated":1629110864245}',i={},d=n('<h1 id="前端面试题汇总-浏览器篇-2"><a class="header-anchor" href="#前端面试题汇总-浏览器篇-2" aria-hidden="true">#</a> 前端面试题汇总-浏览器篇-2</h1><h2 id="token-服务端身份验证的流行方案"><a class="header-anchor" href="#token-服务端身份验证的流行方案" aria-hidden="true">#</a> Token - 服务端身份验证的流行方案</h2><h3 id="简述"><a class="header-anchor" href="#简述" aria-hidden="true">#</a> 简述：</h3><ol><li>需要一个secret（随机数）</li><li>后端利用secret和加密算法(如：HMAC-SHA256)对payload(如账号密码)生成一个字符串(token)，返回前端</li><li>前端每次request在header中带上token</li><li>后端用同样的算法解密</li></ol><h2 id="身份认证"><a class="header-anchor" href="#身份认证" aria-hidden="true">#</a> 身份认证</h2><hr><p>服务端提供资源给客户端，但是某些资源是<strong>有条件</strong>的。所以服务端要能够识别请求者的身份，然后再判断所请求的资源是否可以给请求者。</p><p>token是一种身份验证的机制，初始时用户提交账号数据给服务端，服务端采用一定的策略生成一个字符串（token），token字符串中包含了少量的用户信息，并且有一定的期限。服务端会把token字符串传给客户端，客户端保存token字符串，并在接下来的请求中带上这个字符串。</p><p>它的工作流程大概是这样：</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/image/20200831105031.png" alt=""></p><p>组件图</p><h2 id="token机制"><a class="header-anchor" href="#token机制" aria-hidden="true">#</a> Token机制</h2><p>在这样的流程下，我们需要考虑下面几个问题：</p><ol><li>服务端如何根据token获取用户的信息？</li><li>如何确保识别<strong>伪造</strong>的token？<br> 这里是指token不是经过服务端来生成的。</li><li>如何应付<strong>冒充</strong>的情况？<br> 非法客户端拦截了合法客户端的token，然后使用这个token向服务端发送请求，冒充合法客户端。</li></ol><h3 id="用户匹配"><a class="header-anchor" href="#用户匹配" aria-hidden="true">#</a> 用户匹配</h3><p>服务端在生成token时，加入少量的用户信息，比如用户的id。服务端接收到token之后，可以解析出这些数据，从而将token和用户关联了起来。</p><h3 id="防伪造"><a class="header-anchor" href="#防伪造" aria-hidden="true">#</a> 防伪造</h3><p>一般情况下，建议放入token的数据是不敏感的数据，这样只要服务端使用私钥对数据生成签名，然后和数据拼接起来，作为token的一部分即可。</p><h3 id="防冒充"><a class="header-anchor" href="#防冒充" aria-hidden="true">#</a> 防冒充</h3><h4 id="加干扰码"><a class="header-anchor" href="#加干扰码" aria-hidden="true">#</a> 加干扰码</h4><p>服务端在生成token时，使用了客户端的UA作为干扰码对数据加密，客户端进行请求时，会同时传入token、UA，服务端使用UA对token解密，从而验证用户的身份。</p><p>如果只是把token拷贝到另一个客户端使用，不同的UA会导致在服务端解析token失败，从而实现了一定程度的防冒充。但是攻击者如果猜到服务端使用UA作为加密钥，他可以修改自己的UA。</p><h4 id="有效期"><a class="header-anchor" href="#有效期" aria-hidden="true">#</a> 有效期</h4><p>给token加上有效期，即使被冒充也只是在一定的时间段内有效。这不是完美的防御措施，只是尽量减少损失。</p><p>服务端在生成token时，加入有效期。每次服务端接收到请求，解析token之后，判断是否已过期，如果过期就拒绝服务。</p><h4 id="token刷新"><a class="header-anchor" href="#token刷新" aria-hidden="true">#</a> token刷新</h4><p>如果token过期了，客户端应该对token续期或者重新生成token。这取决于token的过期机制。</p><ol><li>服务器缓存token及对应的过期时间<br> 这个时候就可以采用续期的方式，服务器更新过期时间，token再次有效。</li><li>token中含有过期时间<br> 这个时候需要重新生成token。</li></ol><p>在token续期或者重新生成token的时候，需要额外加入数据来验证身份。因为token已经过期了，即token已经不能用来验证用户的身份了。这个时候可以请求用户重新输入账号和密码，但是用户体验稍差。</p><p>另一种方式是使用摘要。服务端生成token，同时生成token的摘要，然后一起返回给客户端。客户端保存摘要，一般请求只需要用到token，在刷新token时，才需要用到摘要。服务端验证摘要，来验证用户的身份。因为摘要不会频繁的在客户端和服务端之间传输，所以被截取的概率较小。</p><h2 id="token工作流程"><a class="header-anchor" href="#token工作流程" aria-hidden="true">#</a> Token工作流程</h2><hr><h3 id="生成token"><a class="header-anchor" href="#生成token" aria-hidden="true">#</a> 生成token</h3><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/image/20200831105047.png" alt=""></p><p>生成token</p><p>一般在登录的时候生成token。Token管理者负责根据用户的数据生成token和摘要，摘要用来给APP端刷新token用，类似于<a href="https://link.jianshu.com?t=https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;t=resource/res_list&amp;verify=1&amp;id=open1419317853&amp;lang=zh_CN" target="_blank" rel="noopener noreferrer">微信登录</a>中的refresh_token。</p><p>生成token的过程中，ua的充作干扰码。没有相同的ua，就无法解析生成的token字符串。如果客户端是混合开发的模式，生成token和使用token的代理可能不同（比如一个是h5，一个是原生），ua就会不同，token就无法成功的使用。可以选择其他的客户端数据作为干扰码，注意考虑下面的问题：</p><ol><li>不同的客户端，干扰码应该不同<br> 干扰码的很大一个作用是防冒充，如果选择的充当干扰码的客户端数据没有区分性，就达不到效果。</li><li>选择充当干扰码的数据，在哪些情况下会变化？这些情况是否合理？<br> 比如干扰码数据中含有app的版本号，那么app版本升级就会导致干扰码变化。服务端根据新的干扰码，无法解析旧的token，此时用户必须重新登录。这种情况是合理的吗？如果不合理，干扰码中就不应该含有app的版本号。</li></ol><h3 id="拦截验证"><a class="header-anchor" href="#拦截验证" aria-hidden="true">#</a> 拦截验证</h3><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/image/20200831105120.png" alt=""></p><p>拦截验证</p><p>客户端的每一次请求，都必须携带token、ua，拦截器会对敏感资源的访问进行拦截，然后根据ua解析token，解析不成功，表示token和ua不匹配。解析成功之后，判断token是否已过期，如果是，拒绝服务。所有都ok的情况下，拦截器放行，请求传达到业务服务者。</p><h3 id="token刷新-1"><a class="header-anchor" href="#token刷新-1" aria-hidden="true">#</a> token刷新</h3><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/image/20200831105137.png" alt=""></p><p>token刷新</p><p>当token过期，用户需要刷新token。刷新token本质上是这样的：</p><blockquote><p>服务端：这个token是你的吗？<br> 客户端：是的。<br> 服务端：当初我给你token的时候，还给了一个摘要，你把摘要拿过来证明。</p></blockquote><p>客户端需要把token、摘要、ua都传给服务端，服务端对token重新生成摘要，通过判断两个摘要是否相同来验证<strong>这次请求刷新token的客户端，是不是上次请求生成token的客户端</strong>。验证通过，服务端需要使用用户数据重新生成token，用户数据则来自用ua解析token的结果。</p><h2 id="基于-token-的身份验证json-web-token"><a class="header-anchor" href="#基于-token-的身份验证json-web-token" aria-hidden="true">#</a> 基于 Token 的身份验证：JSON Web Token</h2><p>很多大型网站也都在用，比如 Facebook，Twitter，Google+，Github 等等，比起传统的身份验证方法，Token 扩展性更强，也更安全点，非常适合用在 Web 应用或者移动应用上。Token 的中文有人翻译成 “令牌”，我觉得挺好，意思就是，你拿着这个令牌，才能过一些关卡。</p><p>文章先介绍了一下传统身份验证与基于 JWT 身份验证的方法，再理解一下 JWT 的 Token 的组成部分（头部，数据，签名），最后我们会在一个 Node.js 项目上实施签发与验证 JWT 的功能。</p><h3 id="传统身份验证的方法"><a class="header-anchor" href="#传统身份验证的方法" aria-hidden="true">#</a> 传统身份验证的方法</h3><p>HTTP 是一种没有状态的协议，也就是它并不知道是谁是访问应用。这里我们把用户看成是客户端，客户端使用用户名还有密码通过了身份验证，不过下回这个客户端再发送请求时候，还得再验证一下。</p><p>解决的方法就是，当用户请求登录的时候，如果没有问题，我们在服务端生成一条记录，这个记录里可以说明一下登录的用户是谁，然后把这条记录的 ID 号发送给客户端，客户端收到以后把这个 ID 号存储在 Cookie 里，下次这个用户再向服务端发送请求的时候，可以带着这个 Cookie ，这样服务端会验证一个这个 Cookie 里的信息，看看能不能在服务端这里找到对应的记录，如果可以，说明用户已经通过了身份验证，就把用户请求的数据返回给客户端。</p><p>上面说的就是 Session，我们需要在服务端存储为登录的用户生成的 Session ，这些 Session 可能会存储在内存，磁盘，或者数据库里。我们可能需要在服务端定期的去清理过期的 Session 。</p><h3 id="基于-token-的身份验证方法"><a class="header-anchor" href="#基于-token-的身份验证方法" aria-hidden="true">#</a> 基于 Token 的身份验证方法</h3><p>使用基于 Token 的身份验证方法，在服务端不需要存储用户的登录记录。大概的流程是这样的：</p><ol><li>客户端使用用户名跟密码请求登录</li><li>服务端收到请求，去验证用户名与密码</li><li>验证成功后，服务端会签发一个 Token，再把这个 Token 发送给客户端</li><li>客户端收到 Token 以后可以把它存储起来，比如放在 Cookie 里或者 Local Storage 里</li><li>客户端每次向服务端请求资源的时候需要带着服务端签发的 Token</li><li>服务端收到请求，然后去验证客户端请求里面带着的 Token，如果验证成功，就向客户端返回请求的数据</li></ol><h3 id="jwt"><a class="header-anchor" href="#jwt" aria-hidden="true">#</a> JWT</h3><p>实施 Token 验证的方法挺多的，还有一些标准方法，比如 JWT，读作：<em>jot</em> ，表示：JSON Web Tokens 。JWT 标准的 Token 有三个部分：</p><ul><li>header（头部）</li><li>payload（数据）</li><li>signature（签名）</li></ul><p>中间用点分隔开，并且都会使用 Base64 编码，所以真正的 Token 看起来像这样：</p>',62),l=c("div",{class:"language-"},[c("pre",null,[c("code",null,"eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJuaW5naGFvLm5ldCIsImV4cCI6IjE0Mzg5NTU0NDUiLCJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlfQ.SwyHTEx_RQppr97g4J5lKXtabJecpejuef8AqKYMAJc\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-30038"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJuaW5naGFvLm5ldCIsImV4cCI6IjE0Mzg5NTU0NDUiLCJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlfQ.SwyHTEx_RQppr97g4J5lKXtabJecpejuef8AqKYMAJc\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-30038","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),s=c("h3",{id:"header"},[c("a",{class:"header-anchor",href:"#header","aria-hidden":"true"},"#"),o(" Header")],-1),m=c("p",null,"每个 JWT token 里面都有一个 header，也就是头部数据。里面包含了使用的算法，这个 JWT 是不是带签名的或者加密的。主要就是说明一下怎么处理这个 JWT token 。",-1),r=c("p",null,[o("头部里包含的东西可能会根据 JWT 的类型有所变化，比如一个加密的 JWT 里面要包含使用的加密的算法。唯一在头部里面要包含的是 "),c("em",null,"alg"),o(" 这个属性，如果是加密的 JWT，这个属性的值就是使用的签名或者解密用的算法。如果是未加密的 JWT，这个属性的值要设置成 "),c("em",null,"none"),o("。")],-1),p=c("p",null,"示例：",-1),y=c("div",{class:"language-"},[c("pre",null,[c("code",null,'{\n  "alg": "HS256"\n}\n'),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-58153"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":'{\n  "alg": "HS256"\n}\n',"data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-58153","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),u=c("p",null,[o("意思是这个 JWT 用的算法是 HS256。上面的内容得用 "),c("a",{href:"https://tools.ietf.org/html/rfc4648#section-5",target:"_blank",rel:"noopener noreferrer"},"base64url"),o(" 的形式编码一下，所以就变成这样：")],-1),b=c("div",{class:"language-"},[c("pre",null,[c("code",null,"eyJhbGciOiJIUzI1NiJ9\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-32649"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"eyJhbGciOiJIUzI1NiJ9\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-32649","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),h=n('<h3 id="payload"><a class="header-anchor" href="#payload" aria-hidden="true">#</a> Payload</h3><p>Payload 里面是 Token 的具体内容，这些内容里面有一些是标准字段，你也可以添加其它需要的内容。下面是标准字段：</p><ul><li>iss：Issuer，发行者</li><li>sub：Subject，主题</li><li>aud：Audience，观众</li><li>exp：Expiration time，过期时间</li><li>nbf：Not before</li><li>iat：Issued at，发行时间</li><li>jti：JWT ID</li></ul><p>比如下面这个 Payload ，用到了 <em>iss</em> 发行人，还有 <em>exp</em> 过期时间这两个标准字段。另外还有两个自定义的字段，一个是 <em>name</em> ，还有一个是 <em>admin</em> 。</p>',4),k=c("div",{class:"language-"},[c("pre",null,[c("code",null,'{\n "iss": "ninghao.net",\n "exp": "1438955445",\n "name": "wanghao",\n "admin": true\n}\n'),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-8880"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":'{\n "iss": "ninghao.net",\n "exp": "1438955445",\n "name": "wanghao",\n "admin": true\n}\n',"data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-8880","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1),f=c("p",null,"使用 base64url 编码以后就变成了这个样子：",-1),C=c("div",{class:"language-"},[c("pre",null,[c("code",null,"eyJpc3MiOiJuaW5naGFvLm5ldCIsImV4cCI6IjE0Mzg5NTU0NDUiLCJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlfQ\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-75302"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"eyJpc3MiOiJuaW5naGFvLm5ldCIsImV4cCI6IjE0Mzg5NTU0NDUiLCJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlfQ\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-75302","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),g=c("h3",{id:"signature"},[c("a",{class:"header-anchor",href:"#signature","aria-hidden":"true"},"#"),o(" Signature")],-1),v=c("p",null,"JWT 的最后一部分是 Signature ，这部分内容有三个部分，先是用 Base64 编码的 header.payload ，再用加密算法加密一下，加密的时候要放进去一个 Secret ，这个相当于是一个密码，这个密码秘密地存储在服务端。",-1),I=c("ul",null,[c("li",null,"header"),c("li",null,"payload"),c("li",null,"secret")],-1),T=c("div",{class:"language-"},[c("pre",null,[c("code",null,"const encodedString = base64UrlEncode(header) + \".\" + base64UrlEncode(payload); \nHMACSHA256(encodedString, 'secret');\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-52507"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"const encodedString = base64UrlEncode(header) + \".\" + base64UrlEncode(payload); \nHMACSHA256(encodedString, 'secret');\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-52507","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),j=c("p",null,"处理完成以后看起来像这样：",-1),w=c("div",{class:"language-"},[c("pre",null,[c("code",null,"SwyHTEx_RQppr97g4J5lKXtabJecpejuef8AqKYMAJc\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-40559"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"SwyHTEx_RQppr97g4J5lKXtabJecpejuef8AqKYMAJc\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-40559","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),J=c("p",null,"最后这个在服务端生成并且要发送给客户端的 Token 看起来像这样：",-1),x=c("div",{class:"language-"},[c("pre",null,[c("code",null,"eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJuaW5naGFvLm5ldCIsImV4cCI6IjE0Mzg5NTU0NDUiLCJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlfQ.SwyHTEx_RQppr97g4J5lKXtabJecpejuef8AqKYMAJc\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-67237"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJuaW5naGFvLm5ldCIsImV4cCI6IjE0Mzg5NTU0NDUiLCJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlfQ.SwyHTEx_RQppr97g4J5lKXtabJecpejuef8AqKYMAJc\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-67237","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),N=c("p",null,"客户端收到这个 Token 以后把它存储下来，下回向服务端发送请求的时候就带着这个 Token 。服务端收到这个 Token ，然后进行验证，通过以后就会返回给客户端想要的资源。",-1),E=c("h2",{id:"签发与验证-jwt"},[c("a",{class:"header-anchor",href:"#签发与验证-jwt","aria-hidden":"true"},"#"),o(" 签发与验证 JWT")],-1),W=c("p",null,"在应用里实施使用基于 JWT 这种 Token 的身份验证方法，你可以先去找一个签发与验证 JWT 的功能包。无论你的后端应用使用的是什么样的程序语言，系统，或者框架，你应该都可以找到提供类似功能的包。",-1),$=c("p",null,"下面我们在一个 Node.js 项目里，用最简单的方式来演示一下签发还有验证 JWT 的方法。",-1),A=c("h3",{id:"准备项目"},[c("a",{class:"header-anchor",href:"#准备项目","aria-hidden":"true"},"#"),o(" 准备项目")],-1),F=c("p",null,"准备一个简单的 Node.js 项目：",-1),M=c("div",{class:"language-"},[c("pre",null,[c("code",null,"cd ~/desktop\nmkdir jwt-demo\ncd jwt-demo\nnpm init -y\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-28193"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"cd ~/desktop\nmkdir jwt-demo\ncd jwt-demo\nnpm init -y\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-28193","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),S=c("p",null,[o("安装签发与验证 JWT 的功能包，我用的叫 "),c("a",{href:"https://github.com/auth0/node-jsonwebtoken",target:"_blank",rel:"noopener noreferrer"},[c("em",null,"jsonwebtoken")]),o("，在项目里安装一下这个包：")],-1),U=c("div",{class:"language-"},[c("pre",null,[c("code",null,"npm install jsonwebtoken --save\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-1439"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"npm install jsonwebtoken --save\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-1439","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),_=c("h3",{id:"签发-jwt"},[c("a",{class:"header-anchor",href:"#签发-jwt","aria-hidden":"true"},"#"),o(" 签发 JWT")],-1),D=c("p",null,[o("在项目里随便添加一个 .js 文件，比如 "),c("em",null,"index.js"),o("，在文件里添加下面这些代码：")],-1),P=c("div",{class:"language-"},[c("pre",null,[c("code",null,"const jwt = require('jsonwebtoken')\n\n// Token 数据\nconst payload = {\n  name: 'wanghao',\n  admin: true\n}\n\n// 密钥\nconst secret = 'ILOVENINGHAO'\n\n// 签发 Token\nconst token = jwt.sign(payload, secret, { expiresIn: '1day' })\n\n// 输出签发的 Token\nconsole.log(token)\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-44043"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"const jwt = require('jsonwebtoken')\n\n// Token 数据\nconst payload = {\n  name: 'wanghao',\n  admin: true\n}\n\n// 密钥\nconst secret = 'ILOVENINGHAO'\n\n// 签发 Token\nconst token = jwt.sign(payload, secret, { expiresIn: '1day' })\n\n// 输出签发的 Token\nconsole.log(token)\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-44043","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br")])],-1),V=n("<p>非常简单，就是用了刚刚为项目安装的 jsonwebtoken 里面提供的 jwt.sign 功能，去签发一个 token。这个 sign 方法需要三个参数：</p><ol><li><em>playload</em>：签发的 token 里面要包含的一些数据。</li><li><em>secret</em>：签发 token 用的密钥，在验证 token 的时候同样需要用到这个密钥。</li><li><em>options</em>：一些其它的选项。</li></ol><p>在命令行下面，用 <em>node</em> 命令，执行一下项目里的 <em>index.js</em> 这个文件（<em>node index.js</em>），会输出应用签发的 <em>token</em>：</p>",3),O=c("div",{class:"language-"},[c("pre",null,[c("code",null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlLCJpYXQiOjE1MjkwMzM5MDYsImV4cCI6MTUyOTEyMDMwNn0.DctA2QlUCrM6wLWkIO78wBVN0NLpjoIq4T5B_2WJ-PU\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-16793"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlLCJpYXQiOjE1MjkwMzM5MDYsImV4cCI6MTUyOTEyMDMwNn0.DctA2QlUCrM6wLWkIO78wBVN0NLpjoIq4T5B_2WJ-PU\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-16793","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),B=c("p",null,"上面的 Token 内容并没有加密，所以如果用一些 JWT 解码功能，可以看到 Token 里面包含的内容，内容由三个部分组成，像这样：",-1),z=c("div",{class:"language-"},[c("pre",null,[c("code",null,'// header\n{\n  "alg": "HS256", \n  "typ": "JWT"\n}\n\n// payload\n{\n  "admin": true, \n  "iat": 1529033906, \n  "name": "wanghao", \n  "exp": 1529120306\n}\n\n// signature\nDctA2QlUCrM6wLWkIO78wBVN0NLpjoIq4T5B_2WJ-PU\n'),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-29001"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":'// header\n{\n  "alg": "HS256", \n  "typ": "JWT"\n}\n\n// payload\n{\n  "admin": true, \n  "iat": 1529033906, \n  "name": "wanghao", \n  "exp": 1529120306\n}\n\n// signature\nDctA2QlUCrM6wLWkIO78wBVN0NLpjoIq4T5B_2WJ-PU\n',"data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-29001","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br")])],-1),L=c("p",null,"假设用户通过了某种身份验证，你就可以使用上面的签发 Token 的功能为用户签发一个 Token。一般在客户端那里会把它保存在 Cookie 或 LocalStorage 里面。",-1),R=c("p",null,"用户下次向我们的应用请求受保护的资源的时候，可以在请求里带着我们给它签发的这个 Token，后端应用收到请求，检查签名，如果验证通过确定这个 Token 是我们自己签发的，那就可以为用户响应回他需要的资源。",-1),Y=c("h3",{id:"验证-jwt"},[c("a",{class:"header-anchor",href:"#验证-jwt","aria-hidden":"true"},"#"),o(" 验证 JWT")],-1),G=c("p",null,[o("验证 JWT 的用效性，确定一下用户的 JWT 是我们自己签发的，首先要得到用户的这个 JWT Token，然后用 "),c("em",null,"jwt.verify"),o(" 这个方法去做一下验证。这个方法是 Node.js 的 jsonwebtoken 这个包里提供的，在其它的应用框架或者系统里，你可能会找到类似的方法来验证 JWT。")],-1),Q=c("p",null,"打开项目的 index.js 文件，里面添加几行代码：",-1),H=c("div",{class:"language-"},[c("pre",null,[c("code",null,"// 验证 Token\njwt.verify(token, 'bad secret', (error, decoded) => {\n  if (error) {\n    console.log(error.message)\n    return\n  }\n  console.log(decoded)\n})\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-60554"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 验证 Token\njwt.verify(token, 'bad secret', (error, decoded) => {\n  if (error) {\n    console.log(error.message)\n    return\n  }\n  console.log(decoded)\n})\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-60554","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br")])],-1),q=c("p",null,[o("把要验证的 Token 数据，还有签发这个 Token 的时候用的那个密钥告诉 "),c("em",null,"verify"),o(" 这个方法，在一个回调里面有两个参数，"),c("em",null,"error"),o(" 表示错误，"),c("em",null,"decoded"),o(" 是解码之后的 Token 数据。")],-1),X=c("p",null,"执行：",-1),K=c("div",{class:"language-"},[c("pre",null,[c("code",null,"node ~/desktop/jwt-demo/index.js\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-64383"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"node ~/desktop/jwt-demo/index.js\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-64383","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),Z=c("p",null,"输出：",-1),ee=c("div",{class:"language-"},[c("pre",null,[c("code",null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlLCJpYXQiOjE1MjkwMzQ3MzMsImV4cCI6MTUyOTEyMTEzM30.swXojmu7VimFu3BoIgAxxpmm2J05dvD0HT3yu10vuqU\n\ninvalid signature\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-94130"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlLCJpYXQiOjE1MjkwMzQ3MzMsImV4cCI6MTUyOTEyMTEzM30.swXojmu7VimFu3BoIgAxxpmm2J05dvD0HT3yu10vuqU\n\ninvalid signature\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-94130","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),te=c("p",null,[o("注意输出了一个 invalid signature ，表示 Token 里的签名不对，这是因为我们组长 "),c("em",null,"verify"),o(" 方法提供的密钥并不是签发 Token 的时候用的那个密钥。这样修改一下：")],-1),ne=c("div",{class:"language-"},[c("pre",null,[c("code",null,"jwt.verify(token, secret, (error, decoded) => { ...\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-13166"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"jwt.verify(token, secret, (error, decoded) => { ...\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-13166","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),ce=c("p",null,"再次运行，会输出类似的数据：",-1),oe=c("div",{class:"language-"},[c("pre",null,[c("code",null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlLCJpYXQiOjE1MjkwMzUzODYsImV4cCI6MTUyOTEyMTc4Nn0.mkNrt4TfcfmP22xd3C_GQn8qnUmlB39dKT9SpIBTBGI\n\n{ name: 'wanghao', admin: true, iat: 1529035386, exp: 1529121786 }\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-4119"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlLCJpYXQiOjE1MjkwMzUzODYsImV4cCI6MTUyOTEyMTc4Nn0.mkNrt4TfcfmP22xd3C_GQn8qnUmlB39dKT9SpIBTBGI\n\n{ name: 'wanghao', admin: true, iat: 1529035386, exp: 1529121786 }\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-4119","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),ae=c("h3",{id:"rs256-算法"},[c("a",{class:"header-anchor",href:"#rs256-算法","aria-hidden":"true"},"#"),o(" RS256 算法")],-1),ie=c("p",null,"默认签发还有验证 Token 的时候用的是 HS256 算法，这种算法需要一个密钥（密码）。我们还可以使用 RS256 算法签发与验证 JWT。这种方法可以让我们分离开签发与验证，签发时需要用一个密钥，验证时使用公钥，也就是有公钥的地方只能做验证，但不能签发 JWT。",-1),de=c("p",null,"在项目下面创建一个新的目录，里面可以存储即将生成的密钥与公钥文件。",-1),le=c("div",{class:"language-"},[c("pre",null,[c("code",null,"cd ~/desktop/jwt-demo\nmkdir config\ncd config\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-21038"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"cd ~/desktop/jwt-demo\nmkdir config\ncd config\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-21038","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),se=c("h4",{id:"密钥"},[c("a",{class:"header-anchor",href:"#密钥","aria-hidden":"true"},"#"),o(" 密钥")],-1),me=c("p",null,"先生成一个密钥文件：",-1),re=c("div",{class:"language-"},[c("pre",null,[c("code",null,"ssh-keygen -t rsa -b 2048 -f private.key\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-99650"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"ssh-keygen -t rsa -b 2048 -f private.key\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-99650","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),pe=c("h4",{id:"公钥"},[c("a",{class:"header-anchor",href:"#公钥","aria-hidden":"true"},"#"),o(" 公钥")],-1),ye=c("p",null,"基于上面生成的密钥，再去创建一个对应的公钥：",-1),ue=c("div",{class:"language-"},[c("pre",null,[c("code",null,"openssl rsa -in private.key -pubout -outform PEM -out public.key\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-19622"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"openssl rsa -in private.key -pubout -outform PEM -out public.key\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-19622","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),be=c("h3",{id:"签发-jwtrs256-算法"},[c("a",{class:"header-anchor",href:"#签发-jwtrs256-算法","aria-hidden":"true"},"#"),o(" 签发 JWT（RS256 算法）")],-1),he=c("p",null,"用 RS256 算法签发 JWT 的时候，需要从文件系统上读取创建的密钥文件里的内容。",-1),ke=c("div",{class:"language-"},[c("pre",null,[c("code",null,"const fs = require('fs')\n\n// 获取签发 JWT 时需要用的密钥\nconst privateKey = fs.readFileSync('./config/private.key')\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-70655"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"const fs = require('fs')\n\n// 获取签发 JWT 时需要用的密钥\nconst privateKey = fs.readFileSync('./config/private.key')\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-70655","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),fe=c("p",null,"签发仍然使用 jwt.sign 方法，只不过在选项参数里特别说明一下使用的算法是 RS256：",-1),Ce=c("div",{class:"language-"},[c("pre",null,[c("code",null,"// 签发 Token\nconst tokenRS256 = jwt.sign(payload, privateKey, { algorithm: 'RS256' })\n\n// 输出签发的 Token\nconsole.log('RS256 算法：', tokenRS256)\n"),c("div",{class:"m-mdic-copy-wrapper"},[c("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558771327-70641"},"复制成功"),c("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 签发 Token\nconst tokenRS256 = jwt.sign(payload, privateKey, { algorithm: 'RS256' })\n\n// 输出签发的 Token\nconsole.log('RS256 算法：', tokenRS256)\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558771327-70641","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1);i.render=function(n,c,o,a,i,ge){return e(),t("div",null,[d,l,s,m,r,p,y,u,b,h,k,f,C,g,v,I,T,j,w,J,x,N,E,W,$,A,F,M,S,U,_,D,P,V,O,B,z,L,R,Y,G,Q,H,q,X,K,Z,ee,te,ne,ce,oe,ae,ie,de,le,se,me,re,pe,ye,ue,be,he,ke,fe,Ce])};export default i;export{a as __pageData};
