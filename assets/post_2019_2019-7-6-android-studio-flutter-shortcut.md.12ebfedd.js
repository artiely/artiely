import{o as e,c as t,f as i}from"./app.b304d650.js";const r='{"title":"android studio flutter 之快捷键","description":"","frontmatter":{"title":"android studio flutter 之快捷键","tag":["dart","flutter","android studio"],"author":"Artiely","date":"2019-7-6","cover":"https://gitee.com/artiely/Figure-bed/raw/master/images/20200315151518.png","base64":"135bd0"},"headers":[{"level":2,"title":"创建新的StatelessWidget或者StatefulWidget","slug":"创建新的statelesswidget或者statefulwidget"},{"level":2,"title":"使用Alt + Enter可以做更多的事情","slug":"使用alt-enter可以做更多的事情"},{"level":3,"title":"给widget添加padding","slug":"给widget添加padding"},{"level":3,"title":"设置widget居中","slug":"设置widget居中"},{"level":3,"title":"将widget放到Container中","slug":"将widget放到container中"},{"level":3,"title":"将多个widget放到Row,Column中","slug":"将多个widget放到rowcolumn中"},{"level":3,"title":"将widget放到任意的小部件中","slug":"将widget放到任意的小部件中"},{"level":3,"title":"移除widget","slug":"移除widget"},{"level":3,"title":"快速导入库","slug":"快速导入库"},{"level":2,"title":"快速选择整个小部件","slug":"快速选择整个小部件"},{"level":2,"title":"格式化代码","slug":"格式化代码"},{"level":2,"title":"使用Flutter Outline","slug":"使用flutter-outline"},{"level":3,"title":"将相关的代码提取成一个方法","slug":"将相关的代码提取成一个方法"},{"level":3,"title":"上下移动小部件","slug":"上下移动小部件"},{"level":2,"title":"重命名","slug":"重命名"},{"level":2,"title":"删除未使用的import","slug":"删除未使用的import"},{"level":2,"title":"打开flutter inspector","slug":"打开flutter-inspector"}],"relativePath":"post/2019/2019-7-6-android-studio-flutter-shortcut.md","lastUpdated":1629110829627}',a={},d=i('<h1 id="android-studio-flutter-之快捷键"><a class="header-anchor" href="#android-studio-flutter-之快捷键" aria-hidden="true">#</a> android studio flutter 之快捷键</h1><h2 id="创建新的statelesswidget或者statefulwidget"><a class="header-anchor" href="#创建新的statelesswidget或者statefulwidget" aria-hidden="true">#</a> 创建新的StatelessWidget或者StatefulWidget</h2><p>我们不必手动去编写继承StatelessWidget或者StatefulWidget并重写build()方法。IDE已经提供了相应的快捷键。</p><p>只需要输出<code>stless</code>就可以创建一个StatelessWidget。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309113742" alt=""></p><p>或者输入<code>stful</code>创建一个StatefulWidget。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309113749" alt=""></p><p>如果一开始我们创建了一个StatelessWidget，但是后来我们想把它改为一个StatefulWidget的话，我们会新建一个State类，并修改之前StatelessWidget的相关代码。</p><p>其实可以不必要这样做，我们只需要将光标StatelessWidget的地方，按住<code>Alt + Enter</code>(在mac中是option + Enter)，然后单击Convert to StatefulWidget，将自动为你创建所有的样板代码。</p><h2 id="使用alt-enter可以做更多的事情"><a class="header-anchor" href="#使用alt-enter可以做更多的事情" aria-hidden="true">#</a> 使用Alt + Enter可以做更多的事情</h2><p>Alt + Enter(在mac中是option + Enter)是用于Flutter开发中经常要用到的的快捷键。可以单击任何一个widget，然后按Alt + Enter，就可以查看对该widget进行特定的操作。</p><h3 id="给widget添加padding"><a class="header-anchor" href="#给widget添加padding" aria-hidden="true">#</a> 给widget添加padding</h3><p>只需要按下Alt + Enter，单击Add Padding就可以给widget的外面加上一层Padding，并且不会弄乱你之前的代码结构。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309113831" alt=""></p><h3 id="设置widget居中"><a class="header-anchor" href="#设置widget居中" aria-hidden="true">#</a> 设置widget居中</h3><p>只需要按下Alt + Enter，单击Center Widget就可以给widget的外面加上一层Center的小部件，使widget居中。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309113849" alt=""></p><h3 id="将widget放到container中"><a class="header-anchor" href="#将widget放到container中" aria-hidden="true">#</a> 将widget放到Container中</h3><p>只需要按下Alt + Enter，单击Wrap with Container就可以给widget的外面加上一层Container。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309113909" alt=""></p><h3 id="将多个widget放到rowcolumn中"><a class="header-anchor" href="#将多个widget放到rowcolumn中" aria-hidden="true">#</a> 将多个widget放到Row,Column中</h3><p>只需要按下Alt + Enter，单击Wrap with Column或者Row就可以一次性将多个widget放置到Row或者Column中。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309113924" alt=""></p><h3 id="将widget放到任意的小部件中"><a class="header-anchor" href="#将widget放到任意的小部件中" aria-hidden="true">#</a> 将widget放到任意的小部件中</h3><p>只需要按下Alt + Enter，单击Wrap with a new widget就可以将widget放到任意的小部件中。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309113942" alt=""></p><h3 id="移除widget"><a class="header-anchor" href="#移除widget" aria-hidden="true">#</a> 移除widget</h3><p>只需要按下Alt + Enter，单击Remove Widget就可以将当前的widget进行删除。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309113954" alt=""></p><h3 id="快速导入库"><a class="header-anchor" href="#快速导入库" aria-hidden="true">#</a> 快速导入库</h3><p>只需要按下Alt + Enter，选择你需要导入的库回车即可。</p><h2 id="快速选择整个小部件"><a class="header-anchor" href="#快速选择整个小部件" aria-hidden="true">#</a> 快速选择整个小部件</h2><p>当我们需要提取或者删除整个小部件的时候，一般情况下，我们需要找到整个widget的相关代码的开始位置和结束位置，然后再进行操作。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114007" alt=""></p><p>但是如果整个widget的代码行数非常多，那么要自己找出相关的代码，那就会很麻烦。</p><p>所以在整个时候，我们需要快捷键<code>Ctrl + W</code>。可以无需移动光标，就可以帮我们选择出整个widget的相关代码。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114026" alt=""></p><h2 id="格式化代码"><a class="header-anchor" href="#格式化代码" aria-hidden="true">#</a> 格式化代码</h2><p>大多数的IDE都具有格式化代码的功能。我们只需要按下<code>Ctrl+Alt+L</code>就可以格式化代码，并且修复缩进不对齐的问题。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114540" alt=""></p><h2 id="使用flutter-outline"><a class="header-anchor" href="#使用flutter-outline" aria-hidden="true">#</a> 使用Flutter Outline</h2><p>如果只是通过看代码，来看widget之间的嵌套情况，可能需要不断滚动代码，并且也很难理解代码的结构。这个时候，我们需要使用到Flutter Outline。</p><p>Flutter Outline可以在IDE的最右侧找到，位于Flutter Inspector的正上方。打开Flutter Outline，显示的情况是这样的：</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114031" alt=""></p><p>现在，我们可以清楚地看到所有的小部件，在UI中的排列情况，也可以看出小部件的嵌套情况。</p><h3 id="将相关的代码提取成一个方法"><a class="header-anchor" href="#将相关的代码提取成一个方法" aria-hidden="true">#</a> 将相关的代码提取成一个方法</h3><p>Flutter Outline是一个非常有用的工具。Alt + Enter快捷键可以做的事情，大部分也可以在<br> Flutter Outline上进行操作，不过还是Alt + Enter能够实现的功能，还是尽量用Alt + Enter就行，比较快。</p><p>但是Flutter Outline还有更多的功能，比如Extract Method。当我们编写来一个Widget，并且代码行数比较长，那可以考虑将这个widget相关的代码，提取到一个方法中。这个操作可以利用Extract Method来快速完成，不需要你手动将代码转移到一个方法中</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114035" alt=""></p><h3 id="上下移动小部件"><a class="header-anchor" href="#上下移动小部件" aria-hidden="true">#</a> 上下移动小部件</h3><p>如果在一个widget中有多个孩子widget，那么我们可以使用Flutter Outline，来重新排序这些孩子widget的顺序。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114039" alt=""></p><h2 id="重命名"><a class="header-anchor" href="#重命名" aria-hidden="true">#</a> 重命名</h2><p>重命名方法，重命名widget，重命名类或者文件名，只需要使用<code>Shift + F6 </code>就可以输入新名称了。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114044" alt=""></p><h2 id="删除未使用的import"><a class="header-anchor" href="#删除未使用的import" aria-hidden="true">#</a> 删除未使用的import</h2><p>如果我们正在开发一个项目，并导入了大量文件，但是到最后，有些文件其实是没有被使用到的，所以我们是不需要这些多余的导入的。直接使用<code>Ctrl+Alt+O</code>，就可以代替手动删除了所有未使用的import。</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114048" alt=""></p><h2 id="打开flutter-inspector"><a class="header-anchor" href="#打开flutter-inspector" aria-hidden="true">#</a> 打开flutter inspector</h2><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114051.png" alt="1561869493083"><br> 如果你的像我一样不可点击先去设置打开<br><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114056.png" alt="1561869753208"></p><p>然后点击八倍镜，就可以定位widget进行调试，然后很多的ui调试工具</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200309114103.png" alt="1561869991046"></p>',62);a.render=function(i,r,a,l,s,g){return e(),t("div",null,[d])};export default a;export{r as __pageData};
