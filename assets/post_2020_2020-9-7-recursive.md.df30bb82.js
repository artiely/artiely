import{o as n,c as t,t as a,a as e,x as s}from"./app.746f22cf.js";const c='{"title":"说一说递归如何优化-尾递归优化","description":"","frontmatter":{"title":"说一说递归如何优化-尾递归优化","tag":["javaScript"],"cover":"https://gitee.com/artiely/Figure-bed/raw/master/image/20200907112709.png","base64":"1b1b20","author":"artiely","date":"2020-9-7"},"headers":[{"level":2,"title":"一、什么尾调用？","slug":"一-什么尾调用"},{"level":2,"title":"二、尾调用优化","slug":"二-尾调用优化"},{"level":2,"title":"三、尾递归","slug":"三-尾递归"},{"level":2,"title":"四、递归函数的改写","slug":"四-递归函数的改写"},{"level":3,"title":"方法一：是在尾递归函数之外，再提供一个正常形式的函数。","slug":"方法一是在尾递归函数之外再提供一个正常形式的函数"},{"level":3,"title":"方法二：采用ES6的函数默认值。","slug":"方法二采用es6的函数默认值"},{"level":2,"title":"五、尾递归优化的魅力","slug":"五-尾递归优化的魅力"},{"level":2,"title":"六、使用条件 - 严格模","slug":"六-使用条件-严格模"}],"relativePath":"post/2020/2020-9-7-recursive.md","lastUpdated":1629110865707}',o={},l=a('<h1 id="说一说递归如何优化-尾递归优化"><a class="header-anchor" href="#说一说递归如何优化-尾递归优化" aria-hidden="true">#</a> 说一说递归如何优化-尾递归优化</h1><blockquote><p>本文旨在帮助大家掌握递归的性能优化方案——尾递归优化，以及如何对下列函数用尾递归进行优化？</p></blockquote><p>参考摘录：阮一峰-尾调用优化</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/image/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200907102312.jpg" alt=""></p><h2 id="一-什么尾调用"><a class="header-anchor" href="#一-什么尾调用" aria-hidden="true">#</a> 一、什么尾调用？</h2><p>尾调用的概念非常简单，一句话就能说清楚，就是指<code>某个函数的最后一步是调用另一个函数</code>。</p>',6),i=e("div",{class:"language-js line-numbers-mode"},[e("pre",null,[e("code",null,[e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"f"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"x"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"g"),e("span",{class:"token punctuation"},"("),s("x"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n")]),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019904-83157"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"function f(x){\n  return g(x);\n}\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019904-83157","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br")])],-1),p=e("p",null,[s("上面代码中，"),e("code",null,"函数f"),s("的最后一步是调用"),e("code",null,"函数g"),s("，这就叫尾调用。")],-1),u=e("p",null,"以下这两种情况，均不属于尾调用。",-1),d=e("div",{class:"language-js line-numbers-mode"},[e("pre",null,[e("code",null,[e("span",{class:"token comment"},"// 情况一"),s("\n"),e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"f"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"x"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"let"),s(" y "),e("span",{class:"token operator"},"="),s(),e("span",{class:"token function"},"g"),e("span",{class:"token punctuation"},"("),s("x"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n  "),e("span",{class:"token keyword"},"return"),s(" y"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n\n"),e("span",{class:"token comment"},"// 情况二"),s("\n"),e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"f"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"x"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"g"),e("span",{class:"token punctuation"},"("),s("x"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token operator"},"+"),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n")]),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019904-78807"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 情况一\nfunction f(x){\n  let y = g(x);\n  return y;\n}\n\n// 情况二\nfunction f(x){\n  return g(x) + 1;\n}\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019904-78807","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br"),e("span",{class:"line-number"},"4"),e("br"),e("span",{class:"line-number"},"5"),e("br"),e("span",{class:"line-number"},"6"),e("br"),e("span",{class:"line-number"},"7"),e("br"),e("span",{class:"line-number"},"8"),e("br"),e("span",{class:"line-number"},"9"),e("br"),e("span",{class:"line-number"},"10"),e("br")])],-1),r=e("p",null,"上面代码中，情况一是调用函数g之后，还有别的操作，所以不属于尾调用，即使语义完全一样。情况二也属于调用后还有操作，即使写在一行内。",-1),m=e("blockquote",null,[e("p",null,"尾调用不一定出现在函数尾部，只要是最后一步操作即可。")],-1),k=e("div",{class:"language-js line-numbers-mode"},[e("pre",null,[e("code",null,[e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"f"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"x"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"if"),s(),e("span",{class:"token punctuation"},"("),s("x "),e("span",{class:"token operator"},">"),s(),e("span",{class:"token number"},"0"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n    "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"m"),e("span",{class:"token punctuation"},"("),s("x"),e("span",{class:"token punctuation"},")"),s("\n  "),e("span",{class:"token punctuation"},"}"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"n"),e("span",{class:"token punctuation"},"("),s("x"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n")]),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019904-83029"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"function f(x) {\n  if (x > 0) {\n    return m(x)\n  }\n  return n(x);\n}\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019904-83029","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br"),e("span",{class:"line-number"},"4"),e("br"),e("span",{class:"line-number"},"5"),e("br"),e("span",{class:"line-number"},"6"),e("br")])],-1),y=a('<p>上面代码中，函数m和n都属于尾调用，因为它们都是函数<code>f的最后一步操作</code>。</p><h2 id="二-尾调用优化"><a class="header-anchor" href="#二-尾调用优化" aria-hidden="true">#</a> 二、尾调用优化</h2><p>尾调用之所以与其他调用不同，就在于它的特殊的调用位置.</p><blockquote><p>调用记录：可以理解为函数在哪个点执行的</p></blockquote><p>我们知道，函数调用会在内存形成一个<code>&quot;调用记录&quot;</code>，又称<code>&quot;调用帧&quot;</code>（call frame），保存<code>调用位置</code>和<code>内部变量</code>等信息。如果在函数A的内部调用函数B，那么在A的调用记录上方，还会形成一个B的调用记录。等到B运行结束，将结果返回到A，B的调用记录才会消失。如果函数B内部还调用函数C，那就还有一个C的调用记录栈，以此类推。所有的调用记录，就形成一个<code>&quot;调用栈&quot;</code>（call stack）。</p><p>在下面这个图中，最外层的<code>函数A</code>可以理解为<code>Previous Frame</code>，函数A里面的<code>函数B</code>可以理解为<code>Caller Frame</code>。同理<code>函数C</code>也是一样，等到里面的函数依次执行完毕，它们的<code>调用记录</code>才会消失。<br><img src="https://gitee.com/artiely/Figure-bed/raw/master/image/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200907104428.jpg" alt=""></p><p><code>尾调用</code>由于是函数的<code>最后一步操作</code>，所以<code>不需要保留外层函数的调用记录</code>，因为调用位置、内部变量等信息都不会再用到了，只要直接用内层函数的调用记录，取代外层函数的调用记录就可以了。</p>',7),b=e("div",{class:"language-js line-numbers-mode"},[e("pre",null,[e("code",null,[e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"f"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"let"),s(" m "),e("span",{class:"token operator"},"="),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},";"),s("\n  "),e("span",{class:"token keyword"},"let"),s(" n "),e("span",{class:"token operator"},"="),s(),e("span",{class:"token number"},"2"),e("span",{class:"token punctuation"},";"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"g"),e("span",{class:"token punctuation"},"("),s("m "),e("span",{class:"token operator"},"+"),s(" n"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n"),e("span",{class:"token function"},"f"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n\n"),e("span",{class:"token comment"},"// 等同于"),s("\n"),e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"f"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"g"),e("span",{class:"token punctuation"},"("),e("span",{class:"token number"},"3"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n"),e("span",{class:"token function"},"f"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n\n"),e("span",{class:"token comment"},"// 等同于"),s("\n"),e("span",{class:"token function"},"g"),e("span",{class:"token punctuation"},"("),e("span",{class:"token number"},"3"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n")]),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019904-88823"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"function f() {\n  let m = 1;\n  let n = 2;\n  return g(m + n);\n}\nf();\n\n// 等同于\nfunction f() {\n  return g(3);\n}\nf();\n\n// 等同于\ng(3);\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019904-88823","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br"),e("span",{class:"line-number"},"4"),e("br"),e("span",{class:"line-number"},"5"),e("br"),e("span",{class:"line-number"},"6"),e("br"),e("span",{class:"line-number"},"7"),e("br"),e("span",{class:"line-number"},"8"),e("br"),e("span",{class:"line-number"},"9"),e("br"),e("span",{class:"line-number"},"10"),e("br"),e("span",{class:"line-number"},"11"),e("br"),e("span",{class:"line-number"},"12"),e("br"),e("span",{class:"line-number"},"13"),e("br"),e("span",{class:"line-number"},"14"),e("br"),e("span",{class:"line-number"},"15"),e("br")])],-1),f=a('<p>上面代码中，如果<code>函数g</code>不是尾调用，<code>函数f</code>就<code>需要保存</code>内部变量<code>m</code>和<code>n</code>的值、<code>g</code>的调用位置等信息。但由于调用<code>g</code>之后，<code>函数f</code>就结束了，所以执行到最后一步，完全可以<code>删除 f() 的调用记录，只保留 g(3) 的调用记录</code>。</p><p>这就叫做<code>&quot;尾调用优化&quot;</code>，即只保留内层函数的调用记录。如果所有函数都是尾调用，那么完全可以做到每次执行时，调用记录只有一项，这将大大节省内存。这就是&quot;尾调用优化&quot;的意义。</p><h2 id="三-尾递归"><a class="header-anchor" href="#三-尾递归" aria-hidden="true">#</a> 三、尾递归</h2><p>函数调用自身，称为递归。如果尾调用自身，就称为尾递归。</p><p>递归非常<code>耗费内存</code>，因为需要同时保存成千上百个调用记录，很容易发生<code>&quot;栈溢出&quot;</code>错误。但对于尾递归来说，由于<code>只存在一个调用记录</code>，所以永远不会发生&quot;栈溢出&quot;错误。</p>',5),h=e("div",{class:"language-js line-numbers-mode"},[e("pre",null,[e("code",null,[e("span",{class:"token keyword"},"var"),s(),e("span",{class:"token function-variable function"},"mutiply"),s(),e("span",{class:"token operator"},"="),s(),e("span",{class:"token keyword"},"function"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"n"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  \n  "),e("span",{class:"token keyword"},"if"),s(),e("span",{class:"token punctuation"},"("),s("n "),e("span",{class:"token operator"},"==="),s(),e("span",{class:"token number"},"0"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},";"),s("\n  "),e("span",{class:"token keyword"},"return"),s(" n"),e("span",{class:"token operator"},"*"),s(),e("span",{class:"token function"},"mutiply"),e("span",{class:"token punctuation"},"("),s("n"),e("span",{class:"token operator"},"-"),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},")"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n\n"),e("span",{class:"token function"},"mutiply"),e("span",{class:"token punctuation"},"("),e("span",{class:"token number"},"5"),e("span",{class:"token punctuation"},")"),s("\n")]),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019904-77025"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"var mutiply = function(n) {\n  \n  if (n === 0) return 1;\n  return n* mutiply(n-1)\n}\n\nmutiply(5)\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019904-77025","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br"),e("span",{class:"line-number"},"4"),e("br"),e("span",{class:"line-number"},"5"),e("br"),e("span",{class:"line-number"},"6"),e("br"),e("span",{class:"line-number"},"7"),e("br")])],-1),C=e("p",null,[s("我们可以看出来这是一道"),e("code",null,"求10的阶乘"),s("计算题，是一个阶乘函数，计算n的阶乘，最多需要保存n个调用记录，复杂度 O(n) 。")],-1),g=e("p",null,"如果改写成尾递归，只保留一个调用记录，复杂度 O(1) 。",-1),v=e("div",{class:"language-js line-numbers-mode"},[e("pre",null,[e("code",null,[e("span",{class:"token keyword"},"var"),s(),e("span",{class:"token function-variable function"},"mutiply"),s(),e("span",{class:"token operator"},"="),s(),e("span",{class:"token keyword"},"function"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},[s("n"),e("span",{class:"token punctuation"},","),s(" total")]),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  \n  "),e("span",{class:"token keyword"},"if"),s(),e("span",{class:"token punctuation"},"("),s("n "),e("span",{class:"token operator"},"==="),s(),e("span",{class:"token number"},"0"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token keyword"},"return"),s(" total"),e("span",{class:"token punctuation"},";"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"mutiply"),e("span",{class:"token punctuation"},"("),s("n"),e("span",{class:"token operator"},"-"),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},","),s(" n "),e("span",{class:"token operator"},"*"),s(" total"),e("span",{class:"token punctuation"},")"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n\n"),e("span",{class:"token function"},"mutiply"),e("span",{class:"token punctuation"},"("),e("span",{class:"token number"},"5"),e("span",{class:"token punctuation"},","),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token comment"},"// 120"),s("\n")]),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019904-76967"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"var mutiply = function(n, total) {\n  \n  if (n === 0) return total;\n  return mutiply(n-1, n * total)\n}\n\nmutiply(5, 1) // 120\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019904-76967","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br"),e("span",{class:"line-number"},"4"),e("br"),e("span",{class:"line-number"},"5"),e("br"),e("span",{class:"line-number"},"6"),e("br"),e("span",{class:"line-number"},"7"),e("br")])],-1),w=a('<p><img src="https://gitee.com/artiely/Figure-bed/raw/master/image/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200907105206.jpg" alt=""></p><p>由此可见，&quot;尾调用优化&quot;对递归操作意义重大，所以一些<code>函数式编程</code>语言将其写入了语言规格。ES6也是如此，第一次明确规定，所有 <code>ECMAScript</code> 的实现，都必须部署<code>&quot;尾调用优化&quot;</code>。这就是说，在 <code>ES6</code> 中，只要使用<code>尾递归</code>，就<code>不会发生栈溢出</code>，相对节省内存。</p><p>如果按照阮一峰老师讲解完，大家还是没有太理解的话，我把我<code>个人的理解</code>说一下：</p><p>假如使用了<code>尾递归优化</code>，在执行到最后一行的时候，其实就可以看成，就是这一个函数<code>mutiply(n-1, n * total)</code>在执行，每次要进行阶乘递归操作的话，就只有最后一个函数的函数执行上下文，不会造成<code>栈溢出</code>，意思就是把10的阶乘，分开<code>10</code>个函数来执行，分别<code>创建10个函数执行上下文</code>。</p><p>无尾递归优化：</p>',5),_=e("div",{class:"language-js line-numbers-mode"},[e("pre",null,[e("code",null,[e("span",{class:"token keyword"},"var"),s(),e("span",{class:"token function-variable function"},"mutiply"),s(),e("span",{class:"token operator"},"="),s(),e("span",{class:"token keyword"},"function"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"n"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  \n  "),e("span",{class:"token keyword"},"if"),s(),e("span",{class:"token punctuation"},"("),s("n "),e("span",{class:"token operator"},"==="),s(),e("span",{class:"token number"},"0"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},";"),s("\n  "),e("span",{class:"token keyword"},"return"),s(" n"),e("span",{class:"token operator"},"*"),s(),e("span",{class:"token function"},"mutiply"),e("span",{class:"token punctuation"},"("),s("n"),e("span",{class:"token operator"},"-"),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},")"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n")]),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019904-74656"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"var mutiply = function(n) {\n  \n  if (n === 0) return 1;\n  return n* mutiply(n-1)\n}\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019904-74656","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br"),e("span",{class:"line-number"},"4"),e("br"),e("span",{class:"line-number"},"5"),e("br")])],-1),E=a('<p>如果我们<code>不做尾递归优化</code>的话，就相当于，第一次<code>mutiply</code>函数的时候，创建了一个函数执行上下文，要在一个上下文里做<code>10</code>的阶乘，这样就形成<code>闭包</code>了，内部的函数<code>mutiply(n-1)</code>每次都会用到其外部的变量<code>n</code>，所以很容易出现<code>爆栈</code>情况。</p><p>一图解千愁：</p><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/image/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200907110036.jpg" alt=""></p><h2 id="四-递归函数的改写"><a class="header-anchor" href="#四-递归函数的改写" aria-hidden="true">#</a> 四、递归函数的改写</h2><p><img src="https://gitee.com/artiely/Figure-bed/raw/master/image/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200907110047.jpg" alt=""><br> 尾递归的实现，往往需要改写递归函数，确保最后一步只调用自身。做到这一点的方法，就是把<code>所有用到的内部变量改写成函数的参数</code>。比如上面的例子，阶乘函数 <code>factorial</code> 需要用到一个中间变量 <code>total</code> ，那就把这个中间变量改写成函数的参数。这样做的缺点就是不太直观，第一眼很难看出来，为什么计算5的阶乘，需要传入两个参数5和1？</p><p>两个方法可以解决这个问题</p><h3 id="方法一是在尾递归函数之外再提供一个正常形式的函数"><a class="header-anchor" href="#方法一是在尾递归函数之外再提供一个正常形式的函数" aria-hidden="true">#</a> 方法一：是在尾递归函数之外，再提供一个正常形式的函数。</h3>',7),x=e("div",{class:"language-js line-numbers-mode"},[e("pre",null,[e("code",null,[e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"tailFactorial"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},[s("n"),e("span",{class:"token punctuation"},","),s(" total")]),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"if"),s(),e("span",{class:"token punctuation"},"("),s("n "),e("span",{class:"token operator"},"==="),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token keyword"},"return"),s(" total"),e("span",{class:"token punctuation"},";"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"tailFactorial"),e("span",{class:"token punctuation"},"("),s("n "),e("span",{class:"token operator"},"-"),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},","),s(" n "),e("span",{class:"token operator"},"*"),s(" total"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n\n"),e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"factorial"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"n"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"tailFactorial"),e("span",{class:"token punctuation"},"("),s("n"),e("span",{class:"token punctuation"},","),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n\n"),e("span",{class:"token function"},"factorial"),e("span",{class:"token punctuation"},"("),e("span",{class:"token number"},"5"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token comment"},"// 120"),s("\n")]),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019905-84769"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"function tailFactorial(n, total) {\n  if (n === 1) return total;\n  return tailFactorial(n - 1, n * total);\n}\n\nfunction factorial(n) {\n  return tailFactorial(n, 1);\n}\n\nfactorial(5) // 120\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019905-84769","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br"),e("span",{class:"line-number"},"4"),e("br"),e("span",{class:"line-number"},"5"),e("br"),e("span",{class:"line-number"},"6"),e("br"),e("span",{class:"line-number"},"7"),e("br"),e("span",{class:"line-number"},"8"),e("br"),e("span",{class:"line-number"},"9"),e("br"),e("span",{class:"line-number"},"10"),e("br")])],-1),T=a("<p>上面代码通过一个正常形式的阶乘函数 <code>factoria</code>l ，调用尾递归函数 <code>tailFactorial</code> ，看起来就正常多了。</p><p>函数式编程有一个概念，叫做<code>柯里化</code>（currying），意思是将<code>多参数的函数</code>转换成<code>单参数</code>的形式。这里也可以使用<code>柯里化</code>函数思想。</p>",2),j=e("div",{class:"language-js line-numbers-mode"},[e("pre",null,[e("code",null,[e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"currying"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},[s("fn"),e("span",{class:"token punctuation"},","),s(" n")]),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"m"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n    "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"fn"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"call"),e("span",{class:"token punctuation"},"("),e("span",{class:"token keyword"},"this"),e("span",{class:"token punctuation"},","),s(" m"),e("span",{class:"token punctuation"},","),s(" n"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n  "),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n\n"),e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"tailFactorial"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},[s("n"),e("span",{class:"token punctuation"},","),s(" total")]),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"if"),s(),e("span",{class:"token punctuation"},"("),s("n "),e("span",{class:"token operator"},"==="),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token keyword"},"return"),s(" total"),e("span",{class:"token punctuation"},";"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"tailFactorial"),e("span",{class:"token punctuation"},"("),s("n "),e("span",{class:"token operator"},"-"),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},","),s(" n "),e("span",{class:"token operator"},"*"),s(" total"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n\n"),e("span",{class:"token keyword"},"const"),s(" factorial "),e("span",{class:"token operator"},"="),s(),e("span",{class:"token function"},"currying"),e("span",{class:"token punctuation"},"("),s("tailFactorial"),e("span",{class:"token punctuation"},","),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n\n"),e("span",{class:"token function"},"factorial"),e("span",{class:"token punctuation"},"("),e("span",{class:"token number"},"5"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token comment"},"// 120"),s("\n")]),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019905-59414"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"function currying(fn, n) {\n  return function (m) {\n    return fn.call(this, m, n);\n  };\n}\n\nfunction tailFactorial(n, total) {\n  if (n === 1) return total;\n  return tailFactorial(n - 1, n * total);\n}\n\nconst factorial = currying(tailFactorial, 1);\n\nfactorial(5) // 120\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019905-59414","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br"),e("span",{class:"line-number"},"4"),e("br"),e("span",{class:"line-number"},"5"),e("br"),e("span",{class:"line-number"},"6"),e("br"),e("span",{class:"line-number"},"7"),e("br"),e("span",{class:"line-number"},"8"),e("br"),e("span",{class:"line-number"},"9"),e("br"),e("span",{class:"line-number"},"10"),e("br"),e("span",{class:"line-number"},"11"),e("br"),e("span",{class:"line-number"},"12"),e("br"),e("span",{class:"line-number"},"13"),e("br"),e("span",{class:"line-number"},"14"),e("br")])],-1),A=e("p",null,[s("上面代码通过柯里化，将尾递归函数 "),e("code",null,"tailFactorial"),s(" 变为只接受1个参数的 "),e("code",null,"factorial"),s("。")],-1),B=e("h3",{id:"方法二采用es6的函数默认值"},[e("a",{class:"header-anchor",href:"#方法二采用es6的函数默认值","aria-hidden":"true"},"#"),s(" 方法二：采用ES6的函数默认值。")],-1),F=e("div",{class:"language-js line-numbers-mode"},[e("pre",null,[e("code",null,[e("span",{class:"token keyword"},"function"),s(),e("span",{class:"token function"},"factorial"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},[s("n"),e("span",{class:"token punctuation"},","),s(" total "),e("span",{class:"token operator"},"="),s(),e("span",{class:"token number"},"1")]),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token punctuation"},"{"),s("\n  "),e("span",{class:"token keyword"},"if"),s(),e("span",{class:"token punctuation"},"("),s("n "),e("span",{class:"token operator"},"==="),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token keyword"},"return"),s(" total"),e("span",{class:"token punctuation"},";"),s("\n  "),e("span",{class:"token keyword"},"return"),s(),e("span",{class:"token function"},"factorial"),e("span",{class:"token punctuation"},"("),s("n "),e("span",{class:"token operator"},"-"),s(),e("span",{class:"token number"},"1"),e("span",{class:"token punctuation"},","),s(" n "),e("span",{class:"token operator"},"*"),s(" total"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),s("\n"),e("span",{class:"token punctuation"},"}"),s("\n\n"),e("span",{class:"token function"},"factorial"),e("span",{class:"token punctuation"},"("),e("span",{class:"token number"},"5"),e("span",{class:"token punctuation"},")"),s(),e("span",{class:"token comment"},"// 120"),s("\n")]),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019905-33783"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"function factorial(n, total = 1) {\n  if (n === 1) return total;\n  return factorial(n - 1, n * total);\n}\n\nfactorial(5) // 120\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019905-33783","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br"),e("span",{class:"line-number"},"4"),e("br"),e("span",{class:"line-number"},"5"),e("br"),e("span",{class:"line-number"},"6"),e("br")])],-1),I=a('<p>上面代码中，参数 total 有默认值1，所以调用时不用提供这个值。</p><p>总结一下，递归本质上是一种循环操作。纯粹的<code>函数式编程语言</code>没有循环操作命令，所有的<code>循环</code>都用<code>递归</code>实现，这就是为什么尾递归对这些语言极其重要。对于其他支持&quot;尾调用优化&quot;的语言（比如Lua，ES6），只需要知道循环可以用递归代替，而一旦使用递归，就最好使用尾递归。</p><h2 id="五-尾递归优化的魅力"><a class="header-anchor" href="#五-尾递归优化的魅力" aria-hidden="true">#</a> 五、尾递归优化的魅力</h2><p>从下图中，我们就可以看出，单单是求5的阶乘，就提升了5ms之快，可以说厉害的惊人了！<br><img src="https://gitee.com/artiely/Figure-bed/raw/master/image/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200907111627.jpg" alt=""></p><h2 id="六-使用条件-严格模"><a class="header-anchor" href="#六-使用条件-严格模" aria-hidden="true">#</a> 六、使用条件 - 严格模</h2><p>ES6的尾调用优化只在严格模式下开启，正常模式是无效的。</p><p>这是因为在正常模式下，函数内部有两个变量，可以跟踪函数的调用</p>',7),$=e("div",{class:"language-"},[e("pre",null,[e("code",null,"arguments：返回调用时函数的参数。\n\nfunc.caller：返回调用当前函数的那个函数。\n"),e("div",{class:"m-mdic-copy-wrapper"},[e("div",{class:"u-mdic-copy-notify",id:"j-notify-1629558019905-79258"},"复制成功"),e("button",{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"arguments：返回调用时函数的参数。\n\nfunc.caller：返回调用当前函数的那个函数。\n","data-mdic-attach-content":"copyright | [artiely]","data-mdic-notify-id":"j-notify-1629558019905-79258","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"},"复制")])]),e("div",{class:"line-numbers-wrapper"},[e("span",{class:"line-number"},"1"),e("br"),e("span",{class:"line-number"},"2"),e("br"),e("span",{class:"line-number"},"3"),e("br")])],-1),N=e("blockquote",null,[e("p",null,"尾调用优化发生时，函数的调用栈会改写，因此上面两个变量就会失真。严格模式禁用这两个变量，所以尾调用模式仅在严格模式下生效。")],-1),S=e("p",null,[e("a",{href:"https://mp.weixin.qq.com/s/I-QIsLhykupreVKBHNmbwg",target:"_blank",rel:"noopener noreferrer"},"原文")],-1);o.render=function(a,e,s,c,o,q){return n(),t("div",null,[l,i,p,u,d,r,m,k,y,b,f,h,C,g,v,w,_,E,x,T,j,A,B,F,I,$,N,S])};export default o;export{c as __pageData};
